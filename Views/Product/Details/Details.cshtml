@model DomainProduct.Entities.ProductDetail
@{
                /**/

    DomainProduct.Entities.Sku SKUPadrao = new DomainProduct.Entities.Sku();
    if (TempData["SKUPadrao"] != null)
    {
        SKUPadrao = (DomainProduct.Entities.Sku)TempData["SKUPadrao"];
    }
    string ListaImagens = string.Empty;
    string ListaSKU = string.Empty;
    string AvailableReferences = string.Empty;
    string JsonDetail = string.Empty;
    string variacaoSelecionada = string.Empty;
    string skuSelecionado = string.Empty;

    ViewModels.ViewModelStore.Produto.TreeReference treeReference = (ViewModels.ViewModelStore.Produto.TreeReference)TempData["TreeReference"];

    if (treeReference != null)
    {
        JsonDetail = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(treeReference);
    }

    if (Model.ProductImages != null)
    {
        ListaImagens = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ProductImages);
    }

    if (Model.SKUs != null)
    {
        ListaSKU = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.SKUs);
    }

    if (Model.AvailableReferences != null)
    {
        AvailableReferences = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AvailableReferences);
    }

    if (Model.AvailableReferences != null && Model.AvailableReferences.Count > 0)
    {
        foreach (var referencias in Model.AvailableReferences.OrderBy(o => o.OrdinationOfReferences).ToList())
        {
            foreach (var variacoes in referencias.Variations)
            {
                if (SKUPadrao.Variations.FindAll(r => r.IdVariation == variacoes.IdVariation).Count > 0)
                {
                    var referencia_selecionada = SKUPadrao.Variations.FindAll(r => r.IdVariation == variacoes.IdVariation);
                    variacaoSelecionada += referencias.IdReference.ToString() + '-' + referencia_selecionada.FirstOrDefault().IdVariation.ToString() + ',';
                }
            }
        }

        string character = variacaoSelecionada.Substring(variacaoSelecionada.Length - 1);
        if (character == ",")
        {
            variacaoSelecionada = variacaoSelecionada.Remove(variacaoSelecionada.Length - 1);
        }
    }

    if (SKUPadrao.InstallmentMax == null)
    {
        SKUPadrao.InstallmentMax = new DomainProduct.Entities.InstallmentMax();
        SKUPadrao.InstallmentMax.MaxNumber = 0;
        SKUPadrao.InstallmentMax.Value = 0;
    }

    List<DomainProduct.Entities.ProductRating> lista_avaliacoes_completa = new List<DomainProduct.Entities.ProductRating>();
    if (Model.ProductRatings.Count > 5)
    {
        lista_avaliacoes_completa.AddRange(Model.ProductRatings);
        lista_avaliacoes_completa.RemoveRange(0, 5);
    }

    //GRADE ABERTA B2C
    var hasOpenSku = ViewBag.HasOpenSku != null ? ViewBag.HasOpenSku : false;

    //OneClickMaxiPago
    var useOneClickMaxiPago = ViewBag.UseOneClickMaxiPago != null ? ViewBag.UseOneClickMaxiPago : false;

    List<DomainProduct.Entities.ProductImage> productFirstReferenceImages = new List<DomainProduct.Entities.ProductImage>();
    List<DomainProduct.Entities.ProductImage> productImages = new List<DomainProduct.Entities.ProductImage>();
    var classSkus = "nine";

    if (hasOpenSku)
    {
        classSkus = Model.SKUs != null ? "seven" : "nine";
        productImages = Model.ProductImages;
    }
    else
    {
        if (Model.AvailableReferences != null)
        {
            foreach (var item in Model.ProductImages)
            {
                int flag = 0;
                if (item.Variacao_ids != null)
                {
                    for (int i = 0; i < item.Variacao_ids.Length; i++)
                    {
                        for (int j = 0; j < SKUPadrao.Variations.Count(); j++)
                        {
                            if (item.Variacao_ids[0] == SKUPadrao.Variations[j].IdVariation)
                            {
                                productFirstReferenceImages.Add(item);
                            }
                            if (item.Variacao_ids[i] == SKUPadrao.Variations[j].IdVariation)
                            {
                                flag++;
                            }
                        }
                    }
                }
                if (flag == SKUPadrao.Variations.Count())
                {
                    productImages.Add(item);
                }
            }

            if (productImages.Count == 0)
            {
                productImages = productFirstReferenceImages;
            }
            if (productImages.Count == 0)
            {
                productImages = Model.ProductImages;
            }
            if (productImages.Count == 0)
            {
                Model.ProductImages.RemoveAll(item => item.Variacao_ids == null);
            }
        }
        else
        {
            productImages = Model.ProductImages;
        }
    }
}

<script>
    var total_avaliacoes_produto = @(Model.ProductRatings != null ? Model.ProductRatings.Count : 0);
    var lista_avaliacao_produto = @(Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(lista_avaliacoes_completa)));
</script>
@{
    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;
    Layout = "~/Views/Shared/Base/_LayoutBreadCrumb.cshtml";
}
@section remarketing{
    <!-- Google Remarketing -->
    @Html.Action("GoogleRemarketing", "Common", new { origin = ViewContext.RouteData.Values["controller"] })
    <!-- End Google Remarketing -->
}

@section CustomSeo {
    @{
                        /**/

        if (!String.IsNullOrEmpty(Model.MetaDescription))
        {
            <meta name="Description" content="@Model.MetaDescription">
        }

        if (!String.IsNullOrEmpty(Model.MetaKeyWords))
        {
            <meta name="Keywords" content="@Model.MetaKeyWords">
        }
    }
}

@section breadcrumbs {
    <div class="ui two column centered grid stackable middle aligned hidden">
        <div class="container">
            <div class="column">
                <div class="ui breadcrumb margin top medium">
                    <a class="section" href=""></a>

                    <!--COMEÇO FOREACH CATEGORIAS-->
                    @if (Model.Categories != null)
                    {
                        <a class="section" href="/">Home</a>
                        var _categoriaDefault = Model.Categories.Find(c => c.Default == true);
                        if (_categoriaDefault != null)
                        {
                            var _url = "";
                            var _level = _categoriaDefault.Level.Substring(0, _categoriaDefault.Level.Length - 2);
                            List<DomainProduct.Entities.Category> _lstAuxCategories = new List<DomainProduct.Entities.Category>();
                            while (_level.Length >= 2)
                            {
                                var _auxCategory = Model.Categories.Find(c => c.Level == _level);
                                if (_auxCategory != null)
                                {
                                    _lstAuxCategories.Add(_auxCategory);
                                }
                                _level = _level.Substring(0, _level.Length - 2);
                            }
                            _lstAuxCategories.Add(_categoriaDefault);

                            foreach (var _auxCategory in _lstAuxCategories.OrderBy(c => c.Level.Length).ToList())
                            {
                                _url = string.Concat("/categoria", _url.Replace("/categoria", ""), _auxCategory.Url.Replace("/categoria", ""));
                                var _urlFriendly = (_auxCategory.Url != _auxCategory.UrlFriendly ? _auxCategory.UrlFriendly : _url);
                                <i class="right angle icon divider"></i>
                                <a class="section" href="@_urlFriendly">@_auxCategory.Name</a>
                            }
                        }
                    }
                    <!-- FIM FOREACH CATEGORIAS-->
                </div>
            </div>
        </div>
    </div>   
}

<div id="fb-root"></div>
<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v2.10&appId=656083874584141";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>
<!-- Posicione esta tag no cabeçalho ou imediatamente antes da tag de fechamento do corpo. -->
<script src="https://apis.google.com/js/platform.js" async defer>
    { lang: 'pt-BR' }
</script>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<!-- COMEÇO - Váriaveis Produto Principal-->
<input type="hidden" id="produto-id" name="produto-id" value="@Model.IdProduct" />
<input type="hidden" id="produto-stock" name="produto-stock" value="@Model.Stock" />
<input type="hidden" id="produto-sku" name="produto-sku" value="@SKUPadrao.IdSku" />
<input type="hidden" id="produto-codigo" name="produto-codigo" value="@Model.Code" />
<input type="hidden" id="lista-imagens-slide" name="lista-imagens-slide" value="@ListaImagens" />
<input type="hidden" id="principal-total-variacoes" name="principal-total-variacoes" value="@(Model.AvailableReferences != null ? Model.AvailableReferences.Count() : 0) " />
<input type="hidden" id="principal-lista-sku" name="principal-lista-sku" value="@ListaSKU" />
<input type="hidden" id="principal-referencias-selecionadas" name="principal-referencias-selecionadas" value="@variacaoSelecionada" />
<input type="hidden" id="variacoesSelecionadas" value="" />
<input type="hidden" id="has-open-sku" value="@((hasOpenSku == true) ? "true" : "false")" />
<input type="hidden" id="b2b" value="false" />

<!-- FIM - Váriaveis Produto Principal-->
<!-- COMEÇO - Váriaveis Produto Unitário-->
<input type="hidden" value="@Model.Price" id="preco-unidade" name="preco-unidade" />
<input type="hidden" value="@Model.PricePromotion" id="preco-promocao-unidade" name="preco-promocao-unidade" />
@if (Model.InstallmentMax != null)
{
    <input type="hidden" value="@Model.InstallmentMax.Value" id="parcela-maxima-unidade" name="parcela-maxima-unidade" />
    <input type="hidden" value="@Model.InstallmentMax.MaxNumber" id="qtd-parcela-maxima-unidade" name="qtd-parcela-maxima-unidade" />
    <input type="hidden" value="@Model.InstallmentMax.Description" id="pagamento-descricao" name="pagamento-descricao" />
}
<input type="hidden" value="@AvailableReferences" id="principal-produto-referecias" name="principal-produto-referecias" />
<input type="hidden" value="@JsonDetail" id="json-detail" name="json-detail" />
<input type="hidden" value="@ViewBag.DescontoBoleto" id="desconto_boleto" name="desconto_boleto" />
<!-- FIM - Váriaveis Produto Unitário-->
<div class="ui container" itemscope itemtype="http://schema.org/Product">
    <meta itemprop="description" content="">
    <link itemprop="url" href="" rel="author" />
    <div class="ui grid stackable produto">
        <div class="row product information one column">
           
        </div>

        <div class="row detalhes produto">
            <!-- FIM IMAGENS DO PRODUTO PRINCIPAL-->
            <div class="sixteen wide mobile @classSkus wide computer column" id="exibePartial">
                @Html.Partial("~/Views/Product/Details/_Slide.cshtml", productImages.ToList())
            </div>
              <!-- COMEÇO MARCA MOBILE-->
            <div class="mobile only column product-name">
               <h1 itemprop="name" class="nomeProduto" id="produto-nome">@Model.Name</h1>
               <span class="sku-product">@Model.Code</span>
               <div class="stars">
                    <img class="ui middle aligned image logo" src="/assets/image/stars.svg" alt="stars" title="stars">
               </div>
                @if (Model.Brand != null)
                {
                    /*<h5 itemprop="productBrand" class="marcaProduto">@Model.Brand.Name</h5>*/
                }
                else
                {
                    /*<h5 itemprop="productBrand" class="marcaProduto"></h5>*/
                }
                <!-- FIM MARCA MOBILE-->
                <div class="ui two column grid hidden">
                    <div class="column six wide mobile">
                        <h6 itemprop="productID" class="codProduto">@Model.Code</h6>
                    </div>
                    <div class="column ten wide mobile">
                        <div class="avaliacoes">
                            <div class="ui tiny star rating" data-rating="@Model.Rate.Value.ToString().Replace(",", ".")"></div>
                            @if (Model.ProductRatings != null)
                            {
                                if (Model.ProductRatings.Count() == 1)
                                {
                                    <span>1 avaliação</span>
                                }
                                else
                                {
                                    <span>@Model.ProductRatings.Count() avaliações</span>
                                }
                            }
                            else
                            {
                                <span>0 avaliações</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- COMEÇO IMAGENS DO PRODUTO PRINCIPAL-->
            <div class="ui divider hidden"></div>
            <!-- COMEÇO INFORMAÇÕES DO PRODUTO-->
            <div class="sixteen wide mobile seven wide computer column infoProduto">
                <div class="ui grid">
                    <div class="mobile-hide row product information">
                        <div class="column">
                            <h1 itemprop="name" class="nomeProduto" id="produto-nome">@Model.Name</h1>
                            @if (@Model.Brand != null)
                            {
                                <h5 itemprop="productBrand" class="marcaProduto">@Model.Brand.Name</h5>
                            }
                            else
                            {
                                <h5 itemprop="productBrand" class="marcaProduto"></h5>
                            }
                            <div class="ui two column grid stackable">
                                <div class="column">
                                    <h6 itemprop="productID" class="codProduto">@Model.Code</h6>
                                </div>
                                <div class="column">
                                    <div class="avaliacoes">
                                        <div class="ui tiny star rating" data-rating="@Model.Rate.Value.ToString().Replace(",", ".")"></div>
                                        @if (Model.ProductRatings != null)
                                        {
                                            if (Model.ProductRatings.Count() == 1)
                                            {
                                                <span>1 avaliação</span>
                                            }
                                            else
                                            {
                                                <span>@Model.ProductRatings.Count() avaliações</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>0 avaliações</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--COMEÇO DICA DE COMPRA-->
                    <div id="dica_compra_partial">
                        @Html.Action("BuyingTips", "Product", new { productID = @Model.IdProduct, skuID = SKUPadrao != null ? SKUPadrao.IdSku : 0 })
                    </div>
                    <!--FIM DICA DE COMPRA-->
                    <div class="row product-grid">
                        <div class="column blocoInfo">
                            <div class="ui middle aligned margin bottom medium blocoValores">
                                @if (hasOpenSku && Model.SKUs != null && Session["EventList"] == null)
                                {
                                    //GRADE ABERTA B2C
                                    @Html.Partial("~/Views/Product/Details/_GradeSkuB2B.cshtml", Model, new ViewDataDictionary { { "useOneCLick", useOneClickMaxiPago }, { "isB2B", false }, { "hasOpenSku", hasOpenSku } });
                                }
                                else
                                {

                                    <!--INÍCIO PREÇOS-->
                                    <div class="column ui attached segment">
                                        <div class="ui grid">
                                            <div class="row stackable two column">
                                                <div class="hidden column middle aligned padding-top no blocoQtd">
                                                    <div class="ui qtd action mini input">
                                                        <button class="ui icon button qtdminus" id="qtdminus-detalhes">
                                                            <i class="minus icon"></i>
                                                        </button>
                                                        <input type="number" min="1" step="1" size="3" value="1"
                                                               name="quantidade" id="quantidade" class="text center" />
                                                        <button class="ui grey icon button qtdplus" id="qtdplus-detalhes">
                                                            <i class="add icon"></i>
                                                        </button>
                                                    </div>
                                                </div>

                                                <!--COMEÇO GRADE-->
                                                <div class="column padding-bottom no text right blocoPreco" itemprop="offers" id="block-price" itemscope="" itemtype="http://schema.org/Offer">
                                                    <div id="variacao-preco">
                                                        @if (Model.IsKit)
                                                        {
                                                            <div class="infoPrecoKit">
                                                                <span class="display block">Sub-Total: @(string.Format("{0:c}", Model.KitProducts.Sum(m => m.PricePromotion)))</span>
                                                                <span class="display block">Desconto do Kit: @(string.Format("{0:c}", Model.KitProducts.Sum(m => m.Discount)))</span>
                                                            </div>
                                                        }

                                                        @if (Model.HaveSku)
                                                        {
                                                            if (SKUPadrao.PricePromotion != null && SKUPadrao.PricePromotion > 0)
                                                            {
                                                                decimal dec = (decimal)@SKUPadrao.PricePromotion;
                                                                <span id="preco-antigo">@SKUPadrao.Price.ToString("C")</span>
                                                                <span itemprop="price" class="preco" id="preco" data-preco-inicial="@dec">@dec.ToString("C")</span>

                                                                if (SKUPadrao.InstallmentMax != null && SKUPadrao.InstallmentMax.MaxNumber > 1)
                                                                {
                                                                    <div class="infoPreco">
                                                                        <span id="max-p">@SKUPadrao.InstallmentMax.MaxNumber</span>
                                                                        <span id="max-value">@SKUPadrao.InstallmentMax.Value.ToString("C")</span>
                                                                        <span id="description">@string.Format("({0})", @SKUPadrao.InstallmentMax.Description)</span>
                                                                    </div>
                                                                }

                                                                if (ViewBag.DescontoBoleto > 0)
                                                                {
                                                                    var valor_final = (dec - ((dec / 100) * ViewBag.DescontoBoleto));
                                                                    <span id="preco_boleto">ou @string.Format("R${0:0.00}", valor_final) @string.Format(" no boleto bancário ({0}% de desconto)", ViewBag.DescontoBoleto)</span>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <span itemprop="price" class="preco" id="preco" data-preco-inicial="@SKUPadrao.Price">@SKUPadrao.Price.ToString("C")</span>
                                                                if (SKUPadrao.InstallmentMax != null && SKUPadrao.InstallmentMax.MaxNumber > 1)
                                                                {
                                                                    <div class="infoPreco">
                                                                        <span id="max-p">@SKUPadrao.InstallmentMax.MaxNumber<span>X de</span></span>
                                                                        <span id="max-value">@SKUPadrao.InstallmentMax.Value.ToString("C")</span>
                                                                        <span id="description">@string.Format("({0})", @SKUPadrao.InstallmentMax.Description)</span>
                                                                    </div>
                                                                }

                                                                if (ViewBag.DescontoBoleto > 0)
                                                                {
                                                                    var valor_final = (SKUPadrao.Price - ((SKUPadrao.Price / 100) * ViewBag.DescontoBoleto));
                                                                    <span id="preco_boleto">ou @string.Format("R${0:0.00}", valor_final) @string.Format(" no boleto bancário ({0}% de desconto)", ViewBag.DescontoBoleto)</span>
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (Model.PricePromotion != null && Model.PricePromotion > 0)
                                                            {
                                                                decimal dec = (decimal)@Model.PricePromotion;
                                                                <span id="preco-antigo">@Model.Price.ToString("C")</span>
                                                                <span itemprop="price" class="preco" id="preco" data-preco-inicial="@dec">@dec.ToString("C")</span>
                                                                if (Model.InstallmentMax != null && Model.InstallmentMax.MaxNumber > 1)
                                                                {
                                                                    <div class="infoPreco">
                                                                        <span id="max-p">@Model.InstallmentMax.MaxNumber<span>X de</span></span>
                                                                        <span id="max-value">@Model.InstallmentMax.Value.ToString("C")</span>
                                                                        <span id="description">(@Model.InstallmentMax.Description)</span>
                                                                    </div>

                                                                }
                                                                if (ViewBag.DescontoBoleto > 0)
                                                                {
                                                                    var valor_final = (dec - ((dec / 100) * ViewBag.DescontoBoleto));
                                                                    <span id="preco_boleto">ou @string.Format("R${0:0.00}", valor_final) @string.Format(" no boleto bancário ({0}% de desconto)", ViewBag.DescontoBoleto)</span>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <span itemprop="price" class="preco" id="preco" data-preco-inicial="@Model.Price">@Model.Price.ToString("C")</span>
                                                                if (Model.InstallmentMax != null && Model.InstallmentMax.MaxNumber > 1)
                                                                {
                                                                    <div class="infoPreco">
                                                                        <span id="max-p">@Model.InstallmentMax.MaxNumber<span>X de</span></span>
                                                                        <span id="max-value">@Model.InstallmentMax.Value.ToString("C")</span>
                                                                        <span id="description">(@Model.InstallmentMax.Description)</span>
                                                                    </div>

                                                                }
                                                                if (ViewBag.DescontoBoleto > 0)
                                                                {
                                                                    var valor_final = (Model.Price - ((Model.Price / 100) * ViewBag.DescontoBoleto));
                                                                    <span id="preco_boleto">ou @string.Format("R${0:0.00}", valor_final) @string.Format(" no boleto bancário ({0}% de desconto)", ViewBag.DescontoBoleto)</span>
                                                                }
                                                            }
                                                        }
                                                    </div>

                                                    @if (!string.IsNullOrEmpty(@Model.DescriptionAvailabilityStatus))
                                                    {
                                                        <p class="text color grey regular parcelamento small">@Model.DescriptionAvailabilityStatus</p>
                                                    }
                                                </div>
                                                <!--FIM GRADE-->

                                                @if (Model.PurchaseRecurring)
                                                {
                                                    <div class="sixteen wide column text right signature-line">
                                                        <span itemprop="price" class="signature-value" data-preco-inicial="@Model.PricepromotionCA">@string.Format("R${0:0.00}", Model.PricepromotionCA)</span>
                                                        <span class="recurrentperiods" data-html="Périodos de Assinatura Disponível:<br/>
                                                              @foreach (var item in Model.ProductRecurrentPeriod)
                                                              {
                                                                  @Html.Raw(" - " + item.TipoEntrega + "<br/>")
                                                              }
                                                              ">&nbsp;na assinatura&nbsp;<i class="info circle icon"></i></span>
                                                    </div>
                                                }
                                                <div class="sixteen wide computer sixteen wide tablet sixteen wide mobile column btnComprar">
                                                    @if (!Model.ProductSignature)
                                                    {
                                                        <a class="@(Model.Stock == 0 || Model.FlagExhausted || Model.ProductSignature ? " disabled " : " ") ui animated button detalhes @(Session["EventList"] != null ? "btn-add-event-list" : "btn-comprar") @(Model.FlagExhausted || Model.ProductSignature || (Model.HaveSku && SKUPadrao.Stock == 0) || (Model.Stock == 0) ? "disabled action" : "action" )">
                                                        @if (Model.FlagExhausted || (Model.HaveSku && SKUPadrao.Stock == 0) || (Model.Stock == 0))
                                                        {
                                                                <div class="visible content">PRODUTO ESGOTADO</div>
                                                        }
                                                        else
                                                        {
                                                            <div class="visible content">
                                                                @(Session["EventList"] != null ? "ADICIONAR À LISTA" : "ADICIONAR AO CARRINHO")
                                                            </div>
                                                        }
                                                            <div class="hidden content">
                                                                <i class="add to cart icon"></i>
                                                            </div>
                                                        </a>
                                                    }
                                                    @if (Model.PurchaseRecurring && Model.Stock > 0 && !Model.FlagExhausted)
                                                    {
                                                        <a class="ui animated button recurring btn-comprar-assinar detalhes">
                                                            <div class="visible content">ASSINAR PRODUTO</div>
                                                        <div class="hidden content">
                                                            <i class="add to cart icon"></i>
                                                        </div>
                                                    </a>
                                                    }
                                                    <br />
                                                    @if (!Model.ProductSignature)
                                                    {
                                                        if (useOneClickMaxiPago)
                                                        {
                                                            <a class="@(Model.Stock == 0 || Model.FlagExhausted ? " disabled " : " ") ui button small animated basic detalhes btn-comprar-oneclick  @(Model.FlagExhausted || (Model.HaveSku && SKUPadrao.Stock == 0) || (Model.Stock == 0) ? " disabled" : "" )">
                                                                <div class="visible content">Comprar com 1-Click</div>
                                                                <div class="hidden content">
                                                                    <i class="add to cart icon"></i>
                                                                </div>
                                                            </a>
                                                        }

                                                        
                                                        bool inlist = ViewBag.InWishList ? true : false;
                                                        string color = ViewBag.InWishList ? "red" : "grey";
                                                        bool isb2b = Session["segment"] != null && Session["segment"].ToString() == "b2b" ? true : false;
                                                        if (!isb2b)
                                                        {
                                                            <div class="hidden one column wishlistDetails">
                                                                <div class="column">
                                                                    <a href="#" class="wishlist-btn" data-wishlist-local="detail">
                                                                        <i class="icon heart @color wishlist-item" data-in-list="@inlist" data-have-sku="@(Model.AvailableReferences != null && Model.AvailableReferences.Count() > 0 ? "true" : "false")" data-product-id="@Model.IdProduct"></i>
                                                                        <span>Adicionar a Lista de Desejo</span>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!--FIM PREÇOS-->



                                    <!--COMEÇO VARIAÇÔES-->
                                    if (!Model.FlagExhausted)
                                    {
                                        <input type="hidden" id="hdnShowProductOutOfStock" value="@(!LojaCorp.Control.Company._Company.ShowProductOutOfStock ? 0 : 1)" />
                                        if (Model.AvailableReferences != null)
                                        {
                                            <div class="one column ui attached segment">
                                                @if (Model.ProductGrouping != null)
                                                {
                                                    @Html.Partial("~/Views/Product/Details/_ProductsGrouping.cshtml", Model.ProductGrouping)
                                                }
                                                <div class="column">
                                                    <div id="variations-container" class="grid-variations"></div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            if (Model.ProductGrouping != null)
                                            {
                                                <div class="one column ui attached segment">
                                                    <div class="column">
                                                        @Html.Partial("~/Views/Product/Details/_ProductsGrouping.cshtml", Model.ProductGrouping)
                                                    </div>
                                                </div>
                                            }
                                        }

                                        @*@Html.Action("Variations", "Product", new { reference = @Model.AvailableReferences, skuPadrao = @SKUPadrao, ListaSku = Model.SKUs })*@
                                    }
                                    <!--FIM VARIAÇÔES-->



                                    if (Model.IsKit)
                                    {
                                        @Html.Partial("~/Views/Product/Details/_ProductsKit.cshtml", Model.KitProducts)
                                    }
                                }
                            </div>

                           

                            @if (Model.HaveSku)
                            {
                                if (!hasOpenSku)
                                {
                                    if (Model.FlagExhausted || SKUPadrao.Stock == 0)
                                    {
                                        @Html.Partial("~/Views/Product/Details/_AlertMe.cshtml", true)
                                    }
                                    else
                                    {
                                        @Html.Partial("~/Views/Product/Details/_AlertMe.cshtml", false)
                                    }
                                }
                            }
                            else
                            {
                                if (Model.FlagExhausted || Model.Stock == 0)
                                {
                                    @Html.Partial("~/Views/Product/Details/_AlertMe.cshtml", true)
                                }
                                else
                                {
                                    @Html.Partial("~/Views/Product/Details/_AlertMe.cshtml", false)
                                }
                            }

                            <!-- COMEÇO SIMULADOR FRETE-->
                            <div class="ui divider hidden"></div>
                            <div class="column ui attached segment simulador-frete">
                                <div class="ui grid">
                                    <div class="row stackable three column">
                                        <div class="column middle aligned">
                                            <span>Calcular frete e prazo</span>
                                        </div>
                                        <div class="column">
                                            <div class="ui input">
                                                <input type="text" name="simular-frete-cep" id="simular-frete-cep" placeholder="00000-000">
                                                <button name="simular-frete-submit" id="simular-frete-submit" class="ui button primary">calcular</button>
                                            </div>
                                        </div>                                        
                                    </div>
                                </div>
                                <div class="ui divider"></div>
                                <table class="table tabela-cep">
                                    <thead>
                                        <tr>
                                            <th>Entrega</th>
                                            <th>Frete</th>
                                            <th>Prazo</th>
                                        </tr>
                                    </thead>
                                    <tbody id="listSimulateFreight">
                                        <tr><td colspan="3" class="hidden center aligned">Digite um CEP e clique no botão OK.</td></tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- FIM SIMULADOR FRETE-->


                            <!-- COMEÇO REDES SOCIAIS-->
                            <div class="ui divider hidden"></div>
                            <div class="one column row hidden">
                                <div class="column">
                                    @*<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5915ec2f00f07226"></script>
                                            <div class="addthis_inline_share_toolbox"></div>
                                        <div class="fb-share-button" data-href="@Request.Url.AbsoluteUri.ToString()" data-layout="button_count" data-size="small" data-mobile-iframe="true"><a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Flocalhost%3A52868%2FProduct%2FDetails%2F20081&amp;src=sdkpreparse">Compartilhar</a></div>
                                        <div class="g-plus" data-action="share"></div>
                                        <a href="https://twitter.com/share" class="twitter-share-button" data-text="testes" data-show-count="false">Tweet</a>
                                        <a href="whatsapp://send?text=http://google.com.br">Compartilhar</a>
                                        <a href="https://api.whatsapp.com/send?text=@Request.Url.AbsoluteUri"><img style="max-width: 80px;" src="~/assets/image/whats.jpg" /></a>*@
                                    <!-- Go to www.addthis.com/dashboard to customize your tools -->
                                    <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-59dc437c87fdb766"></script>
                                    <!-- Go to www.addthis.com/dashboard to customize your tools -->
                                    <div class="addthis_inline_share_toolbox"></div>
                                </div>
                            </div>
                            <!-- FIM REDES SOCIAIS-->
                        </div>
                    </div>
                </div>
            </div>
            <!-- FIM INFORMAÇÕES DO PRODUTO-->
        </div>

        <div class="ui divider hidden"></div>
        <!--COMEÇO DESCRIÇÃO-->
        <div class="row">

            <div class="ui styled accordion product-acc">
                <div class="title">
                    Descrição
                    <i class="dropdown icon"></i>                 
                </div>
                <div class="content active">
                    @Html.Raw(Model.DescriptionDetailSummary)
                </div>
                <div class="title">
                    Composição e Detalhes
                    <i class="dropdown icon"></i>                    
                </div>
                <div class="content">
                    <p class="transition hidden">
                        <!--COMEÇO DETALHES PRODUTO-->
                            <div class="ui bottom attached tab segment basic" data-tab="detalhes" id="detalhes">
                                <div class="ui grid one column">
                                    <div class="column">
                                        @Html.Raw(@Model.DescriptionDetail)
                                    </div>
                                    @if (Model.Attributes != null && Model.Attributes.Count() > 0)
                                    {
                                        var useFilter = Model.Attributes.Where(attr => attr.useFilter).ToList();
                                        if (useFilter.Count > 0)
                                        {
                                            <div class="column">
                                                <h4>Informações Adicionais do Produto</h4>
                                                @foreach (var atribute in Model.Attributes)
                                                {
                                                    if (atribute.useFilter)
                                                    {
                                                        var attrValues = "";
                                                        <p>
                                                            <strong>@atribute.name: </strong>
                                                            @foreach (var valor in atribute.attributeValues)
                                                            {
                                                                if (valor.active)
                                                                {
                                                                    attrValues = attrValues != "" ? attrValues + "," + @valor.Value : @valor.Value;
                                                                }
                                                            }
                                                            @attrValues
                                                        </p>
                                                    }
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        <!--FIM DETALHES PRODUTO-->
                    </p>
                </div>
                <div class="title">
                    Avaliações
                    <i class="dropdown icon"></i>                    
                </div>
                <div class="content">
                    <!-- COMEÇO AVALIAÇÂO-->
                        <div class="column">
                            <div class="ui comments fluid" id="lista_avaliacoes">
                                @{ int total = Model.ProductRatings.Count > 5 ? 5 : Model.ProductRatings.Count; }
                                @if (Model.ProductRatings != null && total > 0)
                                {
                                    for (int i = 0; i < total; i++)
                                    {
                                        <div class="comment">
                                            <div class="content">
                                                <a class="author">@Model.ProductRatings[i].Name</a>
                                                <div class="metadata">
                                                    <div class="rating">
                                                        <div class="ui mini star rating" data-rating="@Model.ProductRatings[i].Rate"></div>
                                                    </div>
                                                    <div class="date"></div>
                                                    @if (Model.ProductRatings[i].LeavePublicEmail == true)
                                                    {
                                                        <div class="email">@Model.ProductRatings[i].Email</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="email"></div>
                                                    }
                                                    <div class="date">@Model.ProductRatings[i].DateRegister</div>
                                                    <div class="address">@Model.ProductRatings[i].AddressCity</div>
                                                </div>
                                                <div class="text">
                                                    <h5>@Model.ProductRatings[i].Title</h5>
                                                    <p>@Model.ProductRatings[i].Comment</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="ui divider"></div>
                                    }
                                }
                                else
                                {
                                    <div class="no-results">Até o momento não há avaliações para esse produto.</div>
                                }
                            </div>
                            @if (Model.ProductRatings != null && Model.ProductRatings.Count > 5)
                            {
                                <div class="ui button teal tiny right icon" id="btn_carregar_avaliacoes">
                                    <i class="icon refresh"></i>
                                    Carregar mais avaliações
                                </div>
                            }
                        </div>
                        <!-- FIM AVALIAÇÂO-->
                        <!-- COMEÇO FOMULÁRIO DE AVALIAÇÂO-->
                        <div class="column">
                            <form class="ui form" id="avaliar">
                                <div class="field required">
                                    <label>Nome</label>
                                    <input type="text" name="Name" maxlength="100" placeholder="Nome" id="Name" required>
                                </div>
                                <div class="field required">
                                    <label>E-mail</label>
                                    <input type="text" name="email" maxlength="100" placeholder="Email" id="Email" required>
                                </div>
                                <div class="two fields">
                                    <div class="field required" data-jet-revel="true">
                                        <label>Cidade</label>
                                        <div class="ui input">
                                            <input type="text" maxlength="100" name="AddressCity" placeholder="Cidade" id="cidade" required>
                                        </div>
                                    </div>
                                    <div class="field required">
                                        <label>Estado</label>
                                        <select class="ui dropdown search" id="estado_0" name="AddressState">
                                            <option value="">Selecione</option>
                                            <option value="AC">Acre</option>
                                            <option value="AL">Alagoas</option>
                                            <option value="AP">Amapá</option>
                                            <option value="AM">Amazonas</option>
                                            <option value="BA">Bahia</option>
                                            <option value="CE">Ceará</option>
                                            <option value="DF">Distrito Federal</option>
                                            <option value="ES">Espírito Santo</option>
                                            <option value="GO">Goiás</option>
                                            <option value="MA">Maranhão</option>
                                            <option value="MT">Mato Grosso</option>
                                            <option value="MS">Mato Grosso do Sul</option>
                                            <option value="MG">Minas Gerais</option>
                                            <option value="PA">Pará</option>
                                            <option value="PB">Paraíba</option>
                                            <option value="PR">Paraná</option>
                                            <option value="PE">Pernambuco</option>
                                            <option value="PI">Piauí</option>
                                            <option value="RJ">Rio de Janeiro</option>
                                            <option value="RN">Rio Grande do Norte</option>
                                            <option value="RS">Rio Grande do Sul</option>
                                            <option value="RO">Rondônia</option>
                                            <option value="RR">Roraima</option>
                                            <option value="SC">Santa Catarina</option>
                                            <option value="SP">São Paulo</option>
                                            <option value="SE">Sergipe</option>
                                            <option value="TO">Tocantins</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="field required" id="rating_st">
                                    <label>Nota</label>
                                    <div class="ui huge star rating" data-value="5" data-rating="5"></div>
                                </div>
                                <div class="field required">
                                    <label>Título</label>
                                    <input type="text" name="Title" maxlength="200" placeholder="Titulo" id="Title">
                                </div>
                                <div class="field required">
                                    <label>Opinião</label>
                                    <textarea id="Comment" maxlength="1000" name="Comment"></textarea>
                                </div>
                                <div class="field">
                                    <div class="ui checkbox" id="ViewEmailCheck">
                                        <input type="checkbox" tabindex="0" class="hidden" name="ViewEmail" id="ViewEmail">
                                        <label>Mostrar Email?</label>
                                    </div>
                                </div>
                                <input type="hidden" name="Rate" id="Rate" value="1" />
                                @Html.Action("GetRecaptchaV3", "Company", new { Module = "Evaluation" })
                                <br />
                                <button class="ui button btn-avaliar" type="button" id="submitAval">Enviar</button>
                            </form>
                        </div>
                        <!-- FIM FOMULÁRIO DE AVALIAÇÂO-->
                </div>
                <div class="title">
                    Frete, Troca e Devoluções
                    <i class="dropdown icon"></i>                    
                </div>
                <div class="content">
                    <p class="transition hidden">Comprou online e seu sapato não deu certo? Não fique triste.
Trocar ou devolver na Mya é muito fácil =)
<a href="./trocas-e-devolucoes" class="ui button text uppercase tireDuvidas margin top bottom medium">Saiba Mais</a></p>
                </div>
                <div class="title">
                    Formas de Pagamento
                    <i class="dropdown icon"></i>                    
                </div>
                <div class="content">
                    <p class="transition hidden">
                        <div class="paymentcards formas-pagamento">
                            <div class="pagamento visa default">
                                <svg xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny" viewBox="0 0 72 54">
                                    <path class="base" d="M67.7 49.5H4.2c-1.1 0-2-.9-2-2v-41c0-1.1.9-2 2-2h63.5c1.1 0 2 .9 2 2v41c0 1.1-.9 2-2 2z"></path>
                                    <g class="marca">
                                        <path class="azul" d="M31.9 36.7h-5L30 17.3h5m-12.4 0l-4.8 13.3-.6-2.9-1.7-8.7s-.2-1.7-2.4-1.7H5.2l-.1.3s2.4.5 5.3 2.2l4.4 16.8H20l8-19.4h-5.4zm39.7 19.4h4.6l-4-19.4h-4.1c-1.9 0-2.3 1.4-2.3 1.4l-7.5 18h5.3l1.1-2.9h6.4l.5 2.9zm-5.6-6.9l2.6-7.2 1.5 7.2h-4.1zM49.4 22l.7-4.2s-2.2-.8-4.5-.8c-2.5 0-8.4 1.1-8.4 6.4 0 5 7 5.1 7 7.7 0 2.6-6.3 2.2-8.3.5l-.9 4.3s2.3 1.1 5.7 1.1c3.4 0 8.6-1.8 8.6-6.6 0-5-7-5.5-7-7.7s4.9-1.9 7.1-.7z"></path>
                                        <path class="amarelo" d="M17.2 27.8l-1.7-8.7s-.2-1.7-2.4-1.7H5.2l-.1.3s3.8.8 7.5 3.8c3.5 2.7 4.6 6.3 4.6 6.3z"></path>
                                    </g>
                                </svg>
                            </div>
                            <div class="pagamento master default">
                                <svg xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny" viewBox="0 0 72 54" overflow="scroll">
                                    <path class="base" d="M67.7 49.5H4.2c-1.1 0-2-.9-2-2v-41c0-1.1.9-2 2-2h63.5c1.1 0 2 .9 2 2v41c0 1.1-.9 2-2 2z"></path>
                                    <g class="texto">
                                        <path d="M19.3 42.8c-.1-.1-.3-.3-.5-.3-.2-.1-.4-.1-.7-.1h-.4c-.1 0-.3.1-.4.1-.1.1-.3.1-.4.2-.1.1-.2.2-.3.4-.1-.2-.3-.4-.6-.5-.2-.1-.5-.2-.8-.2h-.3c-.1 0-.2.1-.3.1-.1 0-.2.1-.3.2l-.3.3v-.5h-.9v4.2h.9v-2.3c0-.2 0-.3.1-.5.1-.1.1-.3.2-.3.1-.1.2-.2.3-.2.1 0 .3-.1.4-.1.3 0 .5.1.7.3.2.2.2.5.2.8v2.3h.9v-2.3c0-.2 0-.3.1-.5.1-.1.1-.3.2-.3.1-.1.2-.2.3-.2.1 0 .3-.1.4-.1.3 0 .5.1.7.3.2.2.2.5.2.8v2.3h.9V44c0-.2 0-.5-.1-.7.1-.2 0-.4-.2-.5zm4.7.1c-.1-.2-.3-.3-.5-.4-.2-.1-.5-.2-.8-.2-.3 0-.6.1-.8.2-.3.1-.5.3-.7.5-.2.2-.3.4-.4.7-.1.3-.2.6-.2.9 0 .3.1.6.2.9.1.3.3.5.4.7.2.2.4.3.7.5.3.1.5.2.8.2.3 0 .6-.1.8-.2.2-.1.4-.3.5-.4v.5h.9v-4.2H24v.3zm-.1 2.1c-.1.2-.1.3-.3.4-.1.1-.2.2-.4.3-.2.1-.3.1-.5.1s-.4 0-.5-.1c-.2-.1-.3-.2-.4-.3-.1-.1-.2-.3-.2-.4-.1-.2-.1-.3-.1-.5s0-.4.1-.5c.1-.2.1-.3.2-.4.1-.1.2-.2.4-.3.2-.1.3-.1.5-.1s.4 0 .5.1c.2.1.3.2.4.3.1.1.2.3.3.4.1.2.1.3.1.5s0 .4-.1.5zm5.1-.5c-.3-.2-.6-.3-1.1-.4l-.3-.1h-.3c-.1 0-.2 0-.2-.1-.1 0-.1-.1-.1-.1s-.1-.1-.1-.2.1-.3.2-.4c.1-.1.3-.1.6-.1h.4c.1 0 .2.1.4.1.1 0 .2.1.3.1.1 0 .2.1.2.1l.4-.7c-.2-.1-.5-.2-.8-.3-.3-.1-.6-.1-.9-.1-.3 0-.5 0-.7.1-.2.1-.4.2-.5.3-.1.1-.3.3-.3.4-.1.2-.1.4-.1.6 0 .3.1.6.4.8.2.2.6.3 1.1.4l.4.1c.2 0 .4.1.5.2.1.1.2.2.2.3 0 .2-.1.3-.2.4-.2.1-.4.1-.7.1h-.5c-.1 0-.3-.1-.4-.1-.1 0-.2-.1-.3-.1-.1-.1-.2-.1-.2-.2l-.4.7c.2.1.3.2.5.3.2.1.3.1.5.2.2 0 .3.1.5.1h.4c.3 0 .6 0 .8-.1l.6-.3c.2-.1.3-.3.4-.4.1-.2.1-.3.1-.5-.4-.6-.5-.9-.8-1.1zm8.5-1.6c-.2-.2-.4-.3-.6-.4-.2-.1-.5-.2-.8-.2-.3 0-.6.1-.8.2-.3.1-.5.3-.7.4-.2.2-.3.4-.4.7-.1.3-.2.6-.2.9 0 .3.1.6.2.9.1.3.3.5.4.7.2.2.4.3.7.4.3.1.5.2.9.2.3 0 .6 0 .9-.1.3-.1.6-.2.8-.5l-.5-.6-.6.3c-.2.1-.4.1-.6.1-.1 0-.3 0-.4-.1-.1 0-.3-.1-.4-.2l-.3-.3c0-.1-.1-.3-.1-.5h3.1v-.4c0-.3 0-.6-.1-.9-.2-.2-.3-.4-.5-.6zM35 44.1c0-.2.1-.3.1-.4.1-.1.1-.2.2-.3.1-.1.2-.2.3-.2.1 0 .3-.1.4-.1.3 0 .5.1.7.3.2.2.3.4.3.8h-2zm14.6-1.2c-.1-.2-.3-.3-.5-.4-.2-.1-.5-.2-.8-.2-.3 0-.6.1-.8.2-.3.1-.5.3-.7.5-.2.2-.3.4-.4.7-.1.3-.2.6-.2.9 0 .3.1.6.2.9.1.3.3.5.4.7.2.2.4.3.7.5.3.1.5.2.8.2.3 0 .6-.1.8-.2s.4-.3.5-.4v.5h.9v-4.2h-.9v.3zm0 2.1c-.1.2-.1.3-.3.4-.1.1-.2.2-.4.3-.2.1-.3.1-.5.1s-.4 0-.5-.1-.3-.2-.4-.3c-.1-.1-.2-.3-.2-.4-.1-.2-.1-.3-.1-.5s0-.4.1-.5c.1-.2.1-.3.2-.4.1-.1.2-.2.4-.3.2-.1.3-.1.5-.1s.4 0 .5.1c.2.1.3.2.4.3.1.1.2.3.3.4.1.2.1.3.1.5s-.1.4-.1.5zm-16.7.8c-.1.1-.3.1-.4.1h-.3c-.1 0-.1-.1-.2-.1-.1-.1-.1-.1-.1-.2s-.1-.2-.1-.4v-1.8h1.5v-.8h-1.5v-1.3h-.9v1.3h-.8v.8h.8v1.8c0 .6.1 1 .4 1.2.3.3.6.4 1.1.4.3 0 .5 0 .7-.1.1-.1.3-.1.4-.2l-.3-.8c-.1 0-.2 0-.3.1zm8.2-3.5c-.3 0-.5 0-.7.1-.2.1-.4.3-.5.5v-.5h-.8v4.2h.8v-2.3c0-.2 0-.3.1-.5 0-.1.1-.3.2-.4.1-.1.2-.2.3-.2.1 0 .3-.1.4-.1h.6l.3-.9c-.1 0-.1 0-.2-.1-.2.2-.3.2-.5.2zm12.6 0c-.3 0-.5 0-.7.1-.2.1-.4.3-.5.5v-.5h-.8v4.2h.8v-2.3c0-.2 0-.3.1-.5 0-.1.1-.3.2-.4.1-.1.2-.2.3-.2.1 0 .3-.1.4-.1h.6l.3-.9c-.1 0-.1 0-.2-.1-.2.2-.3.2-.5.2zm4.3-1.6v2.2c-.1-.2-.3-.3-.5-.4-.2-.1-.5-.2-.8-.2-.3 0-.6.1-.8.2-.3.1-.5.3-.7.5-.2.2-.3.4-.4.7-.1.3-.2.6-.2.9 0 .3.1.6.2.9.1.3.3.5.4.7.2.2.4.3.7.5.3.1.5.2.8.2.3 0 .6-.1.8-.2.2-.1.4-.3.5-.4v.5h.9V41H58zm-.1 4.3c-.1.2-.1.3-.3.4-.1.1-.2.2-.4.3-.2.1-.3.1-.5.1s-.4 0-.5-.1c-.2-.1-.3-.2-.4-.3-.1-.1-.2-.3-.2-.4-.1-.2-.1-.3-.1-.5s0-.4.1-.5c.1-.2.1-.3.2-.4.1-.1.2-.2.4-.3.2-.1.3-.1.5-.1s.4 0 .5.1c.2.1.3.2.4.3.1.1.2.3.3.4.1.2.1.3.1.5s0 .4-.1.5zm-14.6-1.5c.1-.1.3-.2.4-.3.2-.1.3-.1.5-.1s.4 0 .6.1c.2.1.3.2.4.3l.4-.7c-.2-.1-.3-.2-.6-.3-.3-.1-.6-.2-.9-.2-.3 0-.6.1-.9.2-.3.1-.5.3-.7.5-.2.2-.4.4-.5.7-.1.3-.2.6-.2.9 0 .3.1.6.2.9.1.3.3.5.5.7.2.2.4.3.7.5.3.1.6.2.9.2.3 0 .6-.1.9-.2l.6-.3-.4-.7c-.1.1-.3.2-.4.3-.2.1-.4.1-.6.1-.2 0-.4 0-.5-.1-.2-.1-.3-.2-.4-.3-.1-.1-.2-.3-.3-.4-.1-.2-.1-.3-.1-.5s0-.4.1-.5c.1-.5.2-.6.3-.8z"></path>
                                    </g>
                                    <g class="marca">
                                        <path class="vermelho" d="M30 23c0-5 2.3-9.4 6-12.3-2.7-2.1-6-3.4-9.7-3.4-8.7 0-15.7 7-15.7 15.7s7 15.7 15.7 15.7c3.7 0 7.1-1.3 9.7-3.4-3.6-2.9-6-7.3-6-12.3z"></path>
                                        <path class="laranja" d="M30 23c0 5 2.3 9.4 6 12.3 3.6-2.9 6-7.3 6-12.3s-2.3-9.4-6-12.3c-3.6 2.9-6 7.3-6 12.3z"></path>
                                        <path class="amarelo" d="M45.7 7.3c-3.7 0-7.1 1.3-9.7 3.4 3.6 2.9 6 7.3 6 12.3s-2.3 9.4-6 12.3c2.7 2.1 6 3.4 9.7 3.4 8.7 0 15.7-7 15.7-15.7s-7-15.7-15.7-15.7z"></path>
                                    </g>
                                </svg>
                            </div>
                            <div class="pagamento diners default">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 54">
                                    <path class="base" d="M67.7 49.5H4.2c-1.1 0-2-.9-2-2v-41c0-1.1.9-2 2-2h63.5c1.1 0 2 .9 2 2v41c0 1.1-.9 2-2 2z"></path>
                                    <g class="marca">
                                        <path d="M25.7 20.7c0 3 1.9 5.6 4.6 6.6V14.1c-2.7 1-4.5 3.6-4.6 6.6zm9.7-6.6v13.3c2.7-1 4.6-3.6 4.6-6.6 0-3.1-1.9-5.7-4.6-6.7z"></path>
                                        <path d="M38.6 8.5h-5.8c-6.8 0-12.4 5.1-12.4 12.4C20.5 27.5 26 33 32.8 33h5.8c6.7 0 12.8-5.5 12.8-12.1 0-7.4-6.1-12.4-12.8-12.4zm-5.7 23.4c-6.2 0-11.2-5-11.2-11.2s5-11.2 11.2-11.2 11.2 5 11.2 11.2S39 31.9 32.9 31.9z"></path>
                                    </g>
                                    <g class="texto">
                                        <path d="M7.6 35.9H3.5v.4c.6 0 1.3-.1 1.3 1.2v6.8c0 1-.5 1-1.3 1.1v.4h3.9c5 0 5.8-3.5 5.8-4.9 0-2.5-2-5-5.6-5zm0 9.4c-.7 0-1.5-.1-1.5-1.2v-7.7c.3 0 .5-.1 1.1-.1 2.7 0 4.4 1.9 4.4 4.5.1 2.2-.9 4.5-4 4.5zm7.6-8.1c.4 0 .7-.3.7-.7s-.3-.7-.7-.7-.7.3-.7.7c0 .3.4.7.7.7zm.6 7.8v-5.4c0-.1 0-.2-.1-.2s-.2 0-.3.1c-.1 0-.8.3-1.5.5v.2c.5.3.7.4.7 1V45c0 .5-.3.5-.7.5h-.3v.4h3v-.4h-.2c-.3-.1-.6-.1-.6-.5zm7.5-.1v-3.6c0-1.1-.4-2-1.6-2-.9 0-1.6.5-2.4 1.1v-.9c0-.1 0-.1-.1-.1-.7.3-1.3.5-1.9.7v.3c.7.3.8.4.8.9V45c0 .5-.3.5-.7.5h-.3v.4h3v-.4h-.3c-.4 0-.7 0-.7-.5v-4.2c.5-.3 1.2-.7 1.6-.7.8 0 1.3.4 1.3 1.2V45c0 .5-.3.5-.7.5H21v.4h3v-.4c-.4-.1-.7-.1-.7-.6zm4.1.2c-1.1 0-2-1.1-2.1-2.4v-.8h4l.1-.1v-.3c0-1.5-1.2-2.2-2.4-2.2-1 0-2.8.8-2.8 3.6 0 .9.4 3.1 2.7 3.1 1.2 0 2-.7 2.6-1.6l-.2-.2c-.5.5-1.1.9-1.9.9zm-.4-5.3c.8 0 1.2.6 1.2 1.3 0 .2 0 .4-.4.4h-2.5c.2-1.1.8-1.7 1.7-1.7zm6.8-.5c-.9 0-1.5.9-1.8 1.5v-1.3c0-.1 0-.2-.1-.2s-.7.4-1.7.8v.2c.2.1.7.2.7.6v4c0 .5-.3.5-.7.5h-.4v.4h3.7v-.4h-.8c-.4 0-.7 0-.7-.5v-3.3c0-.8.8-1.2 1-1.2.5 0 .5.3.9.3s.7-.3.7-.7c0-.4-.5-.7-.8-.7zm2.1 1.4c0-.6.5-.9 1.1-.9.9 0 1.4.5 1.5 1.4h.3l-.1-1.4c-.5-.3-1.2-.4-1.6-.4-1.6 0-2.2 1-2.2 1.8 0 2.3 3.1 1.7 3.1 3.4 0 .5-.3 1-1.1 1-1 0-1.6-.8-1.8-1.7l-.3.1.2 1.6c.5.3 1.2.5 1.7.5 1.7 0 2.4-1 2.4-1.9.1-2.3-3.2-1.8-3.2-3.5zm12.9 4.8c-2.2 0-4.2-2-4.2-4.9 0-3.4 2.4-4.5 4-4.5s2.8.7 3 2.3h.4l-.1-2c-1.1-.4-2.2-.8-3.3-.8-2.8 0-5.3 2.1-5.3 5 0 3.2 2.1 5.3 5.4 5.3.9 0 2.5-.4 3.1-.8l.3-2.1-.3-.1c-.4 1.7-1.6 2.6-3 2.6zm5.8-.6v-9.7c0-.1 0-.2-.1-.2 0 0-.2.1-.3.2-.3.2-.9.4-1.5.6v.2c.5.2.8.2.8 1.1V45c0 .5-.3.5-.7.5h-.3v.4h3v-.4h-.2c-.4-.1-.7-.1-.7-.6zm6.9.1v-5.2c0-.2 0-.3-.1-.3s-.9.1-2.2.2v.3c.5.1 1.2.3 1.2.6v3.8c-.6.5-1.2.9-1.7.9-1.2 0-1.2-1.2-1.2-1.6V40c0-.3 0-.4-.2-.4s-1.3.1-1.8.1v.3c.8.1.8.4.8.8v3.6c0 1.2.8 1.7 1.5 1.7 1 0 1.7-.5 2.5-1.2V46h.1c.3-.1 1.4-.4 2-.4v-.3h-.6c-.1 0-.3 0-.3-.3zm4.9-5.7c-.8 0-1.5.5-2.1 1v-5.1c0-.1 0-.2-.1-.2 0 0-.2.1-.3.2-.3.2-.9.4-1.5.6v.2c.5.2.8.2.8 1.1v6.1c0 .9-.1 1.7-.2 2.5l.3.2.4-.3c.4.2.9.5 2 .5 2 0 3.4-1.9 3.4-3.7 0-1.6-1-3.1-2.7-3.1zm-.6 6.3c-.9 0-1.5-.9-1.5-1.4v-3.4c.4-.3.8-.7 1.3-.7 1.1 0 2.3 1.3 2.3 2.8 0 1.2-.6 2.7-2.1 2.7z"></path>
                                    </g>
                                </svg>
                            </div>
                            <div class="pagamento hiper default">
                                <svg xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny" viewBox="0 0 72 54" overflow="scroll">
                                    <path class="base" d="M67.7 49.5H4.2c-1.1 0-2-.9-2-2v-41c0-1.1.9-2 2-2h63.5c1.1 0 2 .9 2 2v41c0 1.1-.9 2-2 2z"></path>
                                    <g class="marca" fill-rule="evenodd">
                                        <path d="M45 29.6c-.2 1.6 1.7 1.4 2.3.7.5-.5.6-1.4.7-2.1-1.4-.2-2.8.1-3 1.4zm-20.7-3.8s0 .1 0 0c0 .1 0 .1 0 0zm7.8.1c-1 0-1.6.8-1.7 1.5h3c.3-1.1-.4-1.5-1.3-1.5zm-7.9.7c-.1.5-.2 1-.3 1.6-.1.6-.3 1.1-.2 1.6.1 1.2 1.8 1.2 2.5.5.6-.6 1-2.1.9-3.3-.2-1.3-2.2-1.2-2.9-.4zm32.9-.6c-1.4.2-2.1 1.9-2 3.4 0 .9.5 1.4 1.3 1.4 2 0 1.9-2.9 2.3-4.6-.5-.1-.9-.3-1.6-.2z"></path>
                                        <path d="M22.6 14.9h-6.1c-2.7.1-4.9 1.2-5.6 3.5-.3 1.2-.5 2.5-.8 3.7-1.3 6.2-2.5 12.6-3.8 18.7h47.9c3.7 0 6.2-.8 6.9-3.7.3-1.4.6-2.9.9-4.4 1.2-5.8 2.4-11.7 3.6-17.7h-43zM21.2 23c.1-.1.3-.2.5-.3.3 0 .5 0 .6.1.4.3 0 1.1-.2 1.3-.2.1-.7.2-1 0-.2-.3 0-.9.1-1.1zM17 31.5c.2-1.5.5-2.9.8-4.3-1.2-.1-2.7-.1-4 0-.3 1.4-.5 2.9-.7 4.3h-1.5c.6-2.9 1-5.8 1.6-8.8h1.4c-.2 1.1-.4 2.4-.7 3.5 1.3.1 2.7 0 4 0 .2-1.2.4-2.3.6-3.5H20c-.6 2.8-1.1 5.8-1.6 8.8H17zm2.7 0c.4-2 .8-4 1.1-6.1v-.1h1.3c-.4 2-.8 4.1-1.1 6.2h-1.3zm6.9-.2c-.8.4-2.7.7-3-.5-.3 1.1-.4 2.3-.6 3.4h-1.3c.6-3 1.1-6 1.6-9h1.1c0 .2-.1.3-.1.5.6-.5 1.9-1 3-.5 2.2.9.9 5.2-.7 6.1zm7.8-3.1h-4.2c-.2.9-.2 2 .4 2.4.9.6 2.4.1 3.2-.2-.1.3-.1.7-.2 1-2.1.5-4.7.6-4.9-1.5-.2-1.5.4-3.1 1.1-3.8.6-.6 1.3-.9 2.3-.9 1.1-.1 2.1.1 2.4 1 .3.6 0 1.3-.1 2zm2.3-.7c-.4 1.2-.5 2.8-.7 4h-1.3c.4-2 .8-4.1 1.1-6.2H37c-.1.3-.1.7-.2 1 .4-.7 1.3-1.5 2.5-1 0 .3-.1.6-.2.9-1.2-.4-2 .4-2.4 1.3zm6.2 3.8c-1.7.6-3.8.5-4.2-1-.4-1.3.2-3.4 1-4.3.9-.9 2.5-1.1 4.3-.8 0 .3-.1.7-.2 1-1.1-.4-2.4-.5-3.1.2-.5.5-.8 1.5-.9 2.4 0 .4 0 .9.1 1.2.4 1.1 2.2.8 3.1.3 0 .4 0 .7-.1 1zm6.4-2.7c-.2 1-.3 1.8-.3 2.9h-1.1c0-.4 0-.7.1-1-.5.9-2.1 1.5-3.3.9-.7-.3-1-1.3-.7-2.3.5-1.5 2.2-1.9 4.3-1.7.1-.3.2-.6.2-1-.2-1-2.6-.4-3.4-.2.1-.3.2-.7.2-1 1.5 0 4.3-.6 4.3 1 .1.8-.2 1.6-.3 2.4zm2.3.7c-.1.8-.3 1.4-.3 2.2H50c.4-2 .8-4.1 1.1-6.2h1.1c-.1.3-.1.7-.2 1 .4-.6 1.3-1.5 2.5-1-.1.3-.1.6-.2.9-2-.6-2.4 1.3-2.7 3.1zm7.5 2.2H58c0-.3.1-.6.1-.9 0-.1-.2.2-.2.3l-.4.4c-.9.6-2.6.4-3.2-.3-.3-.4-.4-.9-.4-1.5 0-2.9 1.9-5.2 5.1-4.2.2-.9.3-1.8.4-2.8h1.3c-.7 3-1.3 5.8-1.6 9z"></path>
                                    </g>
                                </svg>
                            </div>
                            <div class="pagamento boleto default">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 54">
                                    <path class="base" d="M67.7 49.5H4.2c-1.1 0-2-.9-2-2v-41c0-1.1.9-2 2-2h63.5c1.1 0 2 .9 2 2v41c0 1.1-.9 2-2 2z"></path>
                                    <g class="marca">
                                        <path d="M9.8 13.3h2.9v11.5H9.8zm3.8 0h.9v11.5h-.9zm1.8 0H17v11.5h-1.6zm3.1 0h.9v11.5h-.9zm1.3 0h.7v11.5h-.7zm-12.2 0h.9v27.3h-.9zm-2 0h1.6v27.3H5.6zm19.7 0h2.9v11.5h-2.9zm3.9 0h.9v11.5h-.9zm1.6 0h1.7v11.5h-1.7zm3.3 0h.9v11.5h-.9zm1.2 0h.7v11.5h-.7zm-12.2 0h.9v11.5h-.9zm-2 0h1.6v11.5h-1.6zm16.1 0h1.7v11.5h-1.7zm3.2 0h.9v11.5h-.9zm1.3 0h.7v11.5h-.7zm3.3 0h.9v11.5H45zm-2.1 0h1.7v11.5h-1.7zm4.2 0h.9v11.5h-.9zm1.3 0h.7v11.5h-.7zm3.3 0h.9v11.5h-.9zm-2 0h1.6v11.5h-1.6zm3.6 0h2.9v11.5h-2.9zm3.9 0h.9v11.5h-.9zm1.7 0h1.6v11.5h-1.6zm3.2 0h.9v11.5h-.9zm1.3 0h.7v11.5h-.7zm1.8 0h1.7v27.3h-1.7z"></path>
                                    </g>
                                    <g class="texto">
                                        <path d="M10 26.5h4.8c2.5 0 3.6 1.5 3.6 3.9 0 1-.2 1.9-1.1 2.7 1 .9 1.1 1.8 1.1 3.1 0 2.2-1.5 3.5-3.6 3.5H10V26.5zm1.7 5.8h3.1c1.2 0 1.9-.5 1.9-1.8 0-1.4-.4-2.2-1.9-2.2h-3.1v4zm0 5.8h3.1c1.2 0 1.9-.5 1.9-1.8 0-1.4-.4-2.2-1.9-2.2h-3.1v4zm7.7-4.5c0-1.1.2-1.5 1-2.1.8-.7 1.2-.9 2.3-.9H24c1.1 0 1.5.3 2.3.9.8.7 1 1 1 2.1v3.1c0 1.1-.3 1.5-1.1 2.2-.9.7-1.2.9-2.2.9h-1.3c-1 0-1.4-.1-2.2-.9s-1.1-1.1-1.1-2.2v-3.1zm1.6 3.1c0 .3.1.6.6 1 .4.3.6.4 1.1.4H24c.5 0 .8-.1 1.1-.4.5-.4.6-.6.6-1v-3.1c0-.3-.1-.6-.6-1-.4-.3-.6-.4-1.1-.4h-1.3c-.5 0-.8.1-1.1.4-.5.4-.6.6-.6 1v3.1zm12.4 1.4h1.2c.5 0 1.1.1 1.1.8s-.6.8-1.1.8h-4.2c-.5 0-1.1-.1-1.1-.8s.6-.8 1.1-.8h1.3v-9.3h-1.3c-.5 0-1.1-.1-1.1-.8 0-.7.6-.8 1.1-.8h1.7c.9 0 1.2.2 1.2 1.1l.1 9.8zm7.4 1.7c-.7 0-1 0-1.5-.4l-.7-.6c-.6-.6-.8-1-.8-1.8v-3.2c0-.9.1-1.4.8-2l.6-.5c.8-.7 1.1-.7 1.8-.7h1.5c.8 0 1.2.1 1.8.6l.7.5c.8.6.9 1.2.9 2.1v1.3c0 .9-.2 1.2-1.1 1.2h-5.2v.5c0 .2.1.4.2.5l.4.4c.2.2.5.3 1.1.3h3.5c.5 0 1.1.1 1.1.8s-.6.8-1.1.8h-4v.2zm-1.4-5.1h4.7v-1c0-.3 0-.6-.2-.8l-.6-.5c-.2-.2-.5-.2-.8-.2h-1.4c-.3 0-.6 0-.8.2l-.6.4c-.2.2-.3.3-.3.8v1.1zm10.9 2c0 .9 0 1.4 1.1 1.4h.8c.7 0 1-.1 1.1-.7.1-.4.4-.7.8-.7.5 0 .8.4.8.8 0 .5-.3 1-.6 1.4-.6.7-1.4.8-2.2.8h-.8c-.8 0-1.5-.2-2.1-.8-.6-.7-.6-1.4-.6-2.3v-4.4h-.5c-.5 0-1.1-.1-1.1-.8s.6-.8 1.1-.8h.5v-1.7c0-.6.1-1.1.8-1.1s.8.6.8 1.1v1.7H53c.5 0 1.1.1 1.1.8 0 .7-.6.8-1.1.8h-2.7v4.5zm5.9-3.1c0-1.1.2-1.5 1-2.1.8-.7 1.2-.9 2.3-.9h1.3c1.1 0 1.5.3 2.3.9.8.7 1 1 1 2.1v3.1c0 1.1-.3 1.5-1.1 2.2-.9.7-1.2.9-2.2.9h-1.3c-1 0-1.4-.1-2.2-.9s-1.1-1.1-1.1-2.2v-3.1zm1.6 3.1c0 .3.1.6.6 1 .4.3.6.4 1.1.4h1.3c.5 0 .8-.1 1.1-.4.5-.4.6-.6.6-1v-3.1c0-.3-.1-.6-.6-1-.4-.3-.6-.4-1.1-.4h-1.3c-.5 0-.8.1-1.1.4-.5.4-.6.6-.6 1v3.1z"></path>
                                    </g>
                                </svg>
                            </div>
                        </div>
                        <!--
                        @if (!Model.FlagExhausted)
                            {
                                <div id="pagamento-calculado">
                                    @if (@Model.PricePromotion != null && @Model.PricePromotion > 0)
                                    {
                                        @Html.Action("Payment", "Product", new { valor = @Model.PricePromotion, flagExibir = Model.FlagExhausted == true || Model.Stock <= 0 ? false : true })
                                    }
                                    else
                                    {
                                        @Html.Action("Payment", "Product", new { valor = @Model.Price, flagExibir = Model.FlagExhausted == true || Model.Stock <= 0 ? false : true })
                                    }
                                </div>
                        }
                        -->
                    </p>
                </div>


                            

            </div>




            




        </div>
        <!--FIM DESCRIÇÃO-->
        @if (!Model.FlagExhausted && !hasOpenSku)
        {
            <div class="row" id="buy-together">
                @if (Model.BuyTogether != null && Model.BuyTogether.Count > 0 && Session["EventList"] == null)
                {
                    @Html.Partial("~/Views/Product/Details/_BuyTogether.cshtml", Model)
                }
            </div>
        }
    
        @if (Model.AlsoProductsPurchased != null && Model.AlsoProductsPurchased.Count > 0) {
            <div class="row" id="AlsoProducts">
            @Html.Partial("~/Views/Product/Details/_AlsoPurchased.cshtml", Model.AlsoProductsPurchased)
            </div>
        }
        

        <div class="row" id="RelatedProducts">
            @if (Model.RelatedProducts != null && Model.RelatedProducts.Count > 0)
            {
                @Html.Partial("~/Views/Product/Details/_RelatedProducts.cshtml", Model.RelatedProducts)
            }
        </div>

        @if (!Model.FlagExhausted || Session["EventList"] != null)
        {
            @Html.Partial("~/Views/Product/Details/_FloatingBar.cshtml", Model)
        }
    </div>
</div>

<div class="ui modal login">
    <i class="close icon"></i>
    <div class="header ui center aligned segment">Faça login ou cadastre-se para continuar</div>
    <div class="description">
        @Html.Action("LoginPartial", "Customer", new { _class = "modal-login", returnURL = Model.UrlFriendlyCustom != null ? $"/Customer/AutoAddProductInWishListBeforeLogin?redirectToPage={Model.UrlFriendlyCustom}" : $"/Customer/AutoAddProductInWishListBeforeLogin?redirectToPage={Model.UrlFriendly}" })
    </div>
</div>